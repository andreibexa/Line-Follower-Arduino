#include <esp32/thing_properties/thing_properties.h>

// The bellow code is adapted from Arduino IoT Cloud - https://cloud.arduino.com

bool line_follower_mode = false;
int base_speed;
int max_speed;
int min_speed;
float kp;

/*
  Since LineFollowerMode is READ_WRITE variable, onLineFollowerModeChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onLineFollowerModeChange()
{
  Serial.print("line_follower_mode ");
  Serial.println(line_follower_mode);

  Serial2.print("line_follower_mode ");
  Serial2.println(line_follower_mode);
}

/*
  Since MaxSpeed is READ_WRITE variable, onMaxSpeedChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onMaxSpeedChange()
{
  // Add your code here to act upon MaxSpeed change
  Serial.print("max_speed ");
  Serial.println(max_speed);

  Serial2.print("max_speed ");
  Serial2.println(max_speed);
}

/*
  Since BaseSpeed is READ_WRITE variable, onBaseSpeedChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onBaseSpeedChange()
{
  // Add your code here to act upon BaseSpeed change
  Serial.print("base_speed ");
  Serial.println(base_speed);

  Serial2.print("base_speed ");
  Serial2.println(base_speed);
}

/*
  Since MinSpeed is READ_WRITE variable, onMinSpeedChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onMinSpeedChange()
{
  // Add your code here to act upon MinSpeed change
  Serial.print("min_speed ");
  Serial.println(min_speed);

  Serial2.print("min_speed ");
  Serial2.println(min_speed);
}

/*
  Since Kp is READ_WRITE variable, onKpChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onKpChange()
{
  // Add your code here to act upon Kp change
  Serial.print("kp ");
  Serial.println(kp);

  Serial2.print("kp ");
  Serial2.println(kp);
}

/**
 * @brief Initialize the properties for Arduino Cloud
 *
 */
void initProperties()
{
  ArduinoCloud.setBoardId(DEVICE_LOGIN_NAME);
  ArduinoCloud.setSecretDeviceKey(DEVICE_KEY);

  // Initialize default values for Arduino Cloud variables
  // ArduinoCloud.addCallback(ArduinoIoTCloudEvent::SYNC, resetCloudVariables);

  // Generated by Arduino Cloud Dashboard
  ArduinoCloud.addProperty(kp, READWRITE, ON_CHANGE, onKpChange);
  ArduinoCloud.addProperty(base_speed, READWRITE, ON_CHANGE, onBaseSpeedChange);
  ArduinoCloud.addProperty(max_speed, READWRITE, ON_CHANGE, onMaxSpeedChange);
  ArduinoCloud.addProperty(min_speed, READWRITE, ON_CHANGE, onMinSpeedChange);
  ArduinoCloud.addProperty(line_follower_mode, READWRITE, ON_CHANGE, onLineFollowerModeChange, 3);
}

// Wifi manager extension handles the preferred connection method for Arduino IoT.
// This line does not affect the wifi connection.
WiFiConnectionHandler ArduinoIoTPreferredConnection("none", "none");
